version: v1.0
name: WebdriverIO Login Test
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2204
blocks:
  - name: Setup Environment
    task:
      jobs:
        - name: Install Dependencies
          commands:
            - echo "Updating system packages"
            - sudo apt-get update -y
            - sudo apt-get remove -y google-chrome-stable || true
            - sudo apt-get install -y wget unzip curl
            - echo "Downloading and installing Google Chrome"
            - 'wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb'
            - sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get install -f -y
            - echo "Downloading and setting up ChromeDriver"
            - 'CHROME_VERSION=$(google-chrome --version | awk ''{print $3}'')'
            - 'CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")'
            - 'wget -q "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"'
            - unzip chromedriver_linux64.zip
            - sudo mv chromedriver /usr/local/bin/
            - chromedriver --version
            - google-chrome --version
            - echo "Installing Node.js and npm"
            - 'curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -'
            - sudo apt-get install -y nodejs
            - node -v
            - npm -v
  - name: Run Login Feature Tests
    task:
      prologue:
        commands:
          - checkout
          - sem-version node 14.21.3
          - cache restore
          - npm install
          - cache store
      jobs:
        - name: Run WebdriverIO Tests
          commands:
            - echo "Running WebdriverIO login tests"
            - npx wdio --appType=ExperienceApp --testEnv=production --testExecFile='loginTest.json' --windowWidth=1600 --windowHeight=900 || exit 1
      epilogue:
        always:
          commands:
            - echo "Collecting test reports"
            - mkdir -p test-results
            - cp -r output/reports/TestReports/* test-results/
            - store_artifact test-results
